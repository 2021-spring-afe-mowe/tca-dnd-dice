{"version":3,"sources":["Nav.js","DiceList.js","AddDie.js","AddRoll.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","position","bottom","width","Nav","classes","history","useHistory","useState","value","setValue","onLink","href","push","BottomNavigation","showLabels","onChange","event","newValue","className","BottomNavigationAction","label","onClick","icon","list","margin","statLabel","paddingBottom","stat","paddingTop","maxWidth","DiceList","rollData","appDiceNames","appData","open","setOpen","handleClick","getRollData","dieName","allRolls","filter","x","roll","map","console","log","getAverage","average","reduce","a","length","getOnes","diceButtons","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Collapse","in","List","component","disablePadding","AppBar","Toolbar","Typography","variant","Container","Alert","props","elevation","height","textAlign","AddDice","appAddData","handleClose","e","reason","newDie","updateNewDie","IconButton","goBack","TextField","required","id","placeholder","formData","name","target","Button","color","alert","die","Snackbar","autoHideDuration","onClose","severity","slider","formControl","minWidth","display","marks","AddRoll","selectOptions","MenuItem","setName","initialState","newRoll","setNewRoll","updateData","type","data","Slider","valueLabelDisplay","step","min","max","orientation","defaultValue","FormControl","InputLabel","Select","labelId","App","time","updateAppData","addData","Date","now","diceNames","Set","path","AddDie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wZAOMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,QACVC,OAAQ,IACRC,MAAO,UAsCAC,MAlCf,WACI,IAAMC,EAAUP,IACVQ,EAAUC,cAFL,EAGeC,mBAAS,GAHxB,mBAGJC,EAHI,KAGGC,EAHH,KAKLC,EAAS,SAACC,GACdN,EAAQO,KAAKD,IAGf,OACI,eAACE,EAAA,EAAD,CACIC,YAAU,EACVN,MAAOA,EACPO,SAAU,SAACC,EAAOC,GACdR,EAASQ,IAEbC,UAAWd,EAAQL,KANvB,UAQI,cAACoB,EAAA,EAAD,CACIC,MAAM,WACNZ,MAAM,UACNa,QAAS,kBAAMX,EAAO,YACtBY,KAAM,cAAC,IAAD,MAEV,cAACH,EAAA,EAAD,CACIC,MAAM,WACNZ,MAAM,WACNa,QAAS,kBAAMX,EAAO,aACtBY,KAAM,cAAC,IAAD,UCvBhBzB,EAAYC,YAAW,CACzByB,KAAM,CACFC,OAAQ,aAEVC,UAAW,CACTC,cAAe,KAEjBC,KAAM,CACJC,WAAY,IACZC,SAAU,MACVL,OAAQ,eAyGDM,EArGS,SAAC,GAA+B,IAUhDC,EAVmBC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC/B7B,EAAUP,IADmC,EAI3BU,oBAAS,GAJkB,mBAI5C2B,EAJ4C,KAItCC,EAJsC,KAM7CC,EAAc,WAClBD,GAASD,IAMLG,EAAc,SAAEC,GAKlB,OAFAP,GADAA,GADAA,EAAWE,EAAQM,SAASC,QAAO,SAAAC,GAAC,OAAIA,EAAEH,SAAWA,MACjCE,QAAO,SAAAC,GAAC,OAAe,OAAXA,EAAEC,SACdC,KAAI,SAAAF,GAAC,OAAIA,EAAEC,QAC/BE,QAAQC,IAAIP,EAAU,WAAaP,GAC5BA,GAILe,EAAa,SAAER,GACjB,IAAIS,EAAUV,EAAYC,GAASU,QAAO,SAACC,EAAGzC,GAAJ,OAAcyC,EAAIzC,IAAO,GAAK6B,EAAYC,GAASY,OAC7F,OAAIH,GAGO,gBAUTI,EAAU,SAAEb,GACd,OAAOD,EAAYC,GAASE,QAAO,SAAAC,GAAC,OAAS,GAALA,KAAQS,QAI9CE,EAAcpB,EAAaW,KAAI,SAAAF,GAAC,OAClC,qCACA,eAACY,EAAA,EAAD,CAAUC,QAAM,EACZjC,QAASe,EADb,UAGI,cAACmB,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAShB,IACtBP,EAAO,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE7B,cAACwB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAUC,GAAI1B,EAAd,SACI,eAAC2B,EAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,EAApC,UACI,cAACV,EAAA,EAAD,CAAUnC,UAAWd,EAAQqB,UAA7B,SACI,cAAC+B,EAAA,EAAD,CAAcC,QAAQ,oBAE1B,cAACJ,EAAA,EAAD,CAAUnC,UAAWd,EAAQuB,KAA7B,SACI,cAAC6B,EAAA,EAAD,CAAcC,QAASX,EAAWL,OAEtC,cAACY,EAAA,EAAD,CAAUnC,UAAWd,EAAQqB,UAA7B,SACI,cAAC+B,EAAA,EAAD,CAAcC,QAAQ,mBAE1B,cAACJ,EAAA,EAAD,CAAUnC,UAAWd,EAAQuB,KAA7B,SACI,cAAC6B,EAAA,EAAD,CAAcC,SAlCRnB,EAkC6BG,EAjCxCJ,EAAYC,GAASE,QAAO,SAAAC,GAAC,OAAS,IAALA,KAASS,YAmCzC,cAACG,EAAA,EAAD,CAAUnC,UAAWd,EAAQqB,UAA7B,SACI,cAAC+B,EAAA,EAAD,CAAcC,QAAQ,kBAE1B,cAACJ,EAAA,EAAD,CAAUnC,UAAWd,EAAQuB,KAA7B,SACI,cAAC6B,EAAA,EAAD,CAAcC,QAASN,EAAQV,YAI3C,cAACiB,EAAA,EAAD,OA5CgB,IAAEpB,KAgDtB,OACI,gCACI,cAAC0B,EAAA,EAAD,CAAQhE,SAAS,SAAjB,SACI,cAACiE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBAMR,cAACC,EAAA,EAAD,UACI,cAACP,EAAA,EAAD,CAAM3C,UAAWd,EAAQmB,KAAzB,SACK6B,MAIT,cAAC,EAAD,Q,8DClHNiB,EAAQ,SAACC,GACX,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGJ,QAAQ,UAAaG,KAGlDzE,EAAYC,YAAW,CACzBC,KAAM,CACFyE,OAAQ,IACRhD,OAAQ,GACRiD,UAAW,YA+FJC,EAzFC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACTvE,EAAUP,IACVQ,EAAUC,cAFgB,EAKRC,oBAAS,GALD,mBAKzB2B,EALyB,KAKnBC,EALmB,KAO1ByC,EAAc,SAACC,EAAGC,GACL,cAAXA,GAGJ3C,GAAQ,IAXoB,EAeD5B,mBAjBd,IAEe,mBAezBwE,EAfyB,KAejBC,EAfiB,KAuChC,OACI,qCACI,cAAChB,EAAA,EAAD,CAAQhE,SAAS,SAAjB,SACI,eAACiE,EAAA,EAAD,WACI,cAACgB,EAAA,EAAD,CACI5D,QAAS,kBAAMhB,EAAQ6E,UAD3B,SAGI,cAAC,IAAD,MAEJ,cAAChB,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAMR,cAACC,EAAA,EAAD,UACI,sBAAKlD,UAAWd,EAAQL,KAAxB,UACI,cAACoF,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,eACHjE,MAAM,sBACNkE,YAAY,iBACZnB,QAAQ,WACR3C,OAAO,SACPxB,SAAS,SACTQ,MAAOuE,EAAOzC,QACdvB,SA/CD,SAAC8D,GAChB,IAAMU,EAAW,CACbC,KAAMX,EAAEY,OAAOjF,OAEnBwE,EAAaO,MA8CD,uBACA,uBAEA,cAACG,EAAA,EAAD,CACIvB,QAAQ,YACRwB,MAAM,YACNtE,QAhDL,WACX,IAAI0D,EAAOS,KAQP,OAAOI,MAAM,wBAPbhD,QAAQC,IAAIkC,EAAOS,MACnBb,EAAW,CACPjC,KAAM,KACJmD,IAAKd,EAAOS,OAElBrD,GAAQ,IAsCA,qBAOA,cAAC2D,EAAA,EAAD,CAAU5D,KAAMA,EAAM6D,iBAAkB,IAAMC,QAASpB,EAAvD,SACI,cAAC,EAAD,CAAOoB,QAASpB,EAAaqB,SAAS,UAAtC,mC,sDCzFlB5B,GAAQ,SAACC,GACX,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGJ,QAAQ,UAAaG,KAGlDzE,GAAYC,YAAW,CACzBC,KAAM,CACF0E,UAAW,UAEbyB,OAAQ,CACN1B,OAAQ,IACRhD,OAAQ,OAEV2E,YAAa,CACXC,SAAU,KAEZ9C,OAAQ,CACN+C,QAAS,QACT7E,OAAQ,cAIV8E,GAAQ,CACV,CACI9F,MAAO,EACPY,MAAO,KAEV,CACGZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,EACPY,MAAO,KAEV,CACGZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,EACPY,MAAO,KAEV,CACGZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,EACPY,MAAO,KAET,CACEZ,MAAO,GACPY,MAAO,MAEV,CACGZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAEV,CACGZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAEV,CACGZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAET,CACEZ,MAAO,GACPY,MAAO,MAEV,CACGZ,MAAO,GACPY,MAAO,OAoIAmF,GAhIC,SAAC,GAAkC,IAAhC5B,EAA+B,EAA/BA,WAAY3C,EAAmB,EAAnBA,aACrB5B,EAAUP,KACVQ,EAAUC,cAF8B,EAKtBC,oBAAS,GALa,mBAKvC2B,EALuC,KAKjCC,EALiC,KAOxCyC,EAAc,SAACC,EAAGC,GACL,cAAXA,GAGJ3C,GAAQ,IAINqE,EAAgBxE,EAAaW,KAAI,SAAAF,GAAC,OACpC,cAACgE,EAAA,EAAD,CAAUjG,MAAOiC,EAAjB,SAAqBA,OAhBqB,EAoBpBlC,mBAAS,IApBW,mBAoBvCC,EApBuC,KAoBhCC,EApBgC,OA4BtBF,mBAAS,IA5Ba,mBA4BvCiF,EA5BuC,KA4BjCkB,EA5BiC,KAoCxCC,EAAe,CACjBjE,KAAMlC,EACJqF,IAAKL,GAtCmC,EAyChBjF,mBAASoG,GAzCO,mBAyCvCC,EAzCuC,KAyC9BC,EAzC8B,KA2CxCC,EAAa,SAACC,EAAMC,GACtB,IAAMzB,EAAQ,2BACPqB,GADO,kBAEPG,EAAOC,IAGdH,EAAWtB,IAef,OACI,qCACI,cAACvB,EAAA,EAAD,CAAQhE,SAAS,SAAjB,SACI,eAACiE,EAAA,EAAD,WACI,cAACgB,EAAA,EAAD,CACI5D,QAAS,kBAAMhB,EAAQ6E,UAD3B,SAGI,cAAC,IAAD,MAEJ,cAAChB,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAMR,eAACC,EAAA,EAAD,CAAWlD,UAAWd,EAAQL,KAA9B,UACI,qBAAKmB,UAAWd,EAAQ8F,OAAxB,SACI,cAACe,EAAA,EAAD,CACIC,kBAAkB,OAClBC,KAAM,EACNb,MAAOA,GACPc,IAAK,EACLC,IAAK,GACLC,YAAY,WACZvG,SAlEO,SAAC8D,EAAG5D,GAC3BR,EAASQ,GACT6F,EAAW,OAAQ7F,IAiEHsG,aAAc,GACd/G,MAAOA,MAIf,eAACgH,EAAA,EAAD,CAAatG,UAAWd,EAAQ+F,YAAhC,UACI,cAACsB,EAAA,EAAD,CAAYpC,GAAG,mBAAf,iBACA,eAACqC,GAAA,EAAD,CACIC,QAAQ,mBACRtC,GAAG,aACH7E,MAAOgF,EACPzE,SAtEO,SAAC8D,GACxB6B,EAAQ7B,EAAEY,OAAOjF,OACjBsG,EAAW,MAAOjC,EAAEY,OAAOjF,QAgEf,UAMI,cAACiG,EAAA,EAAD,CAAUjG,MAAM,GAAhB,SACI,wCAEHgG,QAKT,cAACd,EAAA,EAAD,CACKxE,UAAWd,EAAQkD,OACpBa,QAAQ,YACRwB,MAAM,YACNtE,QA7DA,WACZ,IAAIuF,EAAQf,IAMR,OAAOD,MAAM,wBALbhD,QAAQC,IAAI+D,EAAQf,KACpBjD,QAAQC,IAAI+D,EAAQlE,MACpBiC,EAAWiC,GACXzE,GAAQ,IAoDJ,sBAQA,cAAC2D,EAAA,EAAD,CAAU5D,KAAMA,EAAM6D,iBAAkB,IAAMC,QAASpB,EAAvD,SACI,cAAC,GAAD,CAAOoB,QAASpB,EAAaqB,SAAS,UAAtC,kC,SC5JL2B,GA7EH,WAER,IAFc,EA2BmBrH,mBAzBV,CACnBgC,SAAU,CACN,CACID,QAAS,gBACPI,KAAM,EACNmF,KAAM,mBAEV,CACEvF,QAAS,iBACPI,KAAM,GACNmF,KAAM,sBAEV,CACEvF,QAAS,iBACPI,KAAM,GACNmF,KAAM,uBAEV,CACEvF,QAAS,iBACPI,KAAM,EACNmF,KAAM,0BAtBN,mBA2BP5F,EA3BO,KA2BE6F,EA3BF,KA6BdlF,QAAQC,IAAIZ,GAEZ,IAAM8F,EAAU,SAAChG,GACb+F,EAAc,2BACP7F,GADM,IAEPM,SAAS,GAAD,mBACHN,EAAQM,UADL,CAEJ,CACED,QAASP,EAAS8D,IAChBnD,KAAMX,EAASW,KACfmF,KAAMG,KAAKC,YAIzBrF,QAAQC,IAAIZ,IAIZiG,EAAYjG,EAAQM,SAASI,KAAI,SAAAF,GAAC,OAAIA,EAAEH,WAK5C,OAJA4F,EAAS,YAAO,IAAIC,IAAID,IACxBtF,QAAQC,IAAI,eAAiBqF,GAIzB,cAAC,KAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,KAAK,WAAZ,SACI,cAAC,GAAD,CACIzD,WAAYoD,EACZ/F,aAAckG,MAGtB,cAAC,IAAD,CAAOE,KAAK,UAAZ,SACI,cAACC,EAAD,CACI1D,WAAYoD,MAGpB,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACI,cAAC,EAAD,CACIpG,aAAckG,EACdjG,QAASA,YCnElBqG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.eec5accb.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\nimport CasinoOutlined from '@material-ui/icons/CasinoOutlined';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: \"fixed\",\r\n        bottom: \"0\",\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\nfunction Nav() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const onLink = (href) => {\r\n      history.push(href);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            showLabels\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n            }}\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction\r\n                label=\"Add Dice\"\r\n                value=\"/addDie\"\r\n                onClick={() => onLink(\"/addDie\")} \r\n                icon={<FormatListNumberedIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                label=\"Add Roll\"\r\n                value=\"/addRoll\"\r\n                onClick={() => onLink(\"/addRoll\")}\r\n                icon={<CasinoOutlined />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n  }\r\n\r\nexport default Nav;","import { React, useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , List\r\n    , ListItem\r\n    , ListItemIcon\r\n    , ListItemText\r\n    , Collapse\r\n    , Divider\r\n    , makeStyles\r\n} from '@material-ui/core';\r\nimport Casino from '@material-ui/icons/Casino';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Nav from './Nav';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        margin: \"0 0 2em 0\"\r\n    }\r\n    , statLabel: {\r\n        paddingBottom: \"0\"\r\n    }\r\n    , stat: {\r\n        paddingTop: \"0\",\r\n        maxWidth: \"60%\",\r\n        margin: \"0 0 0 2em\"\r\n    }\r\n});\r\n\r\nexport const DiceList = ({ appDiceNames, appData }) => {\r\n    const classes = useStyles();\r\n\r\n    // collapse stuff\r\n    const [open, setOpen] = useState(true);\r\n  \r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n\r\n    let rollData;\r\n\r\n    //get roll data\r\n    const getRollData = ( dieName ) => {\r\n        rollData = appData.allRolls.filter(x => x.dieName == dieName);\r\n        rollData = rollData.filter(x => x.roll !== null);\r\n        rollData = rollData.map(x => x.roll);\r\n        console.log(dieName + \" rolls: \" + rollData);\r\n        return rollData;\r\n    }\r\n\r\n    //get average\r\n    const getAverage = ( dieName ) => {\r\n        let average = getRollData(dieName).reduce((a, value) => a + value, 0) / getRollData(dieName).length;\r\n        if (average) {\r\n            return average;\r\n        } else {\r\n            return \"Never rolled\";\r\n        }\r\n    }\r\n\r\n    // get 20s\r\n    const getTwenties = ( dieName ) => {\r\n        return getRollData(dieName).filter(x => x == 20).length\r\n    }\r\n\r\n    // get 20s\r\n    const getOnes = ( dieName ) => {\r\n        return getRollData(dieName).filter(x => x == 1).length\r\n    }\r\n\r\n    // generate dice buttons\r\n    const diceButtons = appDiceNames.map(x =>\r\n        <>\r\n        <ListItem button\r\n            onClick={handleClick}\r\n        >\r\n            <ListItemIcon>\r\n                <Casino />\r\n            </ListItemIcon>\r\n            <ListItemText primary={x} />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Divider />\r\n        <Collapse in={open}>\r\n            <List component=\"div\" disablePadding>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"Average Roll:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getAverage(x)} />\r\n                </ListItem>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"20's Rolled:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getTwenties(x)} />\r\n                </ListItem>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"1's Rolled:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getOnes(x)} />\r\n                </ListItem>\r\n            </List>\r\n        </Collapse>\r\n        <Divider />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        Dice\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container>\r\n                <List className={classes.list}>\r\n                    {diceButtons}\r\n                </List>\r\n            </Container>\r\n\r\n            <Nav />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DiceList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , TextField\r\n    , Button\r\n    , IconButton\r\n    , Snackbar\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        margin: 16,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst initialState = '';\r\n\r\nconst AddDice = ({ appAddData }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // set open state for success popup\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = (e, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // add die with blank roll so it shows up in the lists\r\n    const [newDie, updateNewDie] = useState(initialState);\r\n\r\n    // update form\r\n    const updateData = (e) => {\r\n        const formData = {\r\n            name: e.target.value\r\n        };\r\n        updateNewDie(formData);\r\n    };\r\n    \r\n    // add the die\r\n    const addDie = () => {\r\n        if (newDie.name) {\r\n            console.log(newDie.name);\r\n            appAddData({\r\n                roll: null\r\n                , die: newDie.name\r\n            });\r\n            setOpen(true);\r\n        } else {\r\n            return alert(\"Please enter a name!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        Add Die\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container>\r\n                <div className={classes.root}>\r\n                    <TextField\r\n                        required\r\n                        id=\"new-die-name\"\r\n                        label=\"Die Name - Required\"\r\n                        placeholder=\"Enter die name\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        position=\"center\"\r\n                        value={newDie.dieName}\r\n                        onChange={updateData}\r\n                    />\r\n\r\n                    <br />\r\n                    <br />\r\n                    \r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={addDie}\r\n                    >\r\n                        Add Die\r\n                    </Button>\r\n                    <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                        <Alert onClose={handleClose} severity=\"success\">\r\n                            Die added!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n  }\r\n\r\nexport default AddDice;","import React, { useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , Button\r\n    , IconButton\r\n    , Slider\r\n    , Select\r\n    , InputLabel\r\n    , MenuItem\r\n    , makeStyles\r\n    , FormControl\r\n    , Snackbar\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\",\r\n    }\r\n    , slider: {\r\n        height: 500,\r\n        margin: \"1em\"\r\n    }\r\n    , formControl: {\r\n        minWidth: 120\r\n    }\r\n    , button: {\r\n        display: \"Block\",\r\n        margin: \"1em auto\"\r\n    }\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: 1,\r\n        label: '1',\r\n    }\r\n    ,{\r\n        value: 2,\r\n        label: '2',\r\n    }\r\n    , {\r\n        value: 3,\r\n        label: '3',\r\n    }\r\n    , {\r\n        value: 4,\r\n        label: '4',\r\n    }\r\n    ,{\r\n        value: 5,\r\n        label: '5',\r\n    }\r\n    , {\r\n        value: 6,\r\n        label: '6',\r\n    }\r\n    , {\r\n        value: 7,\r\n        label: '7',\r\n    }\r\n    ,{\r\n        value: 8,\r\n        label: '8',\r\n    }\r\n    , {\r\n        value: 9,\r\n        label: '9',\r\n    }\r\n    , {\r\n        value: 10,\r\n        label: '10',\r\n    }\r\n    ,{\r\n        value: 11,\r\n        label: '11',\r\n    }\r\n    , {\r\n        value: 12,\r\n        label: '12',\r\n    }\r\n    , {\r\n        value: 13,\r\n        label: '13',\r\n    }\r\n    ,{\r\n        value: 14,\r\n        label: '14',\r\n    }\r\n    , {\r\n        value: 15,\r\n        label: '15',\r\n    }\r\n    , {\r\n        value: 16,\r\n        label: '16',\r\n    }\r\n    ,{\r\n        value: 17,\r\n        label: '17',\r\n    }\r\n    , {\r\n        value: 18,\r\n        label: '18',\r\n    }\r\n    , {\r\n        value: 19,\r\n        label: '19',\r\n    }\r\n    ,{\r\n        value: 20,\r\n        label: '20',\r\n    }\r\n];\r\n\r\nconst AddRoll = ({ appAddData, appDiceNames }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // set open state for success popup\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = (e, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // generate select die options\r\n    const selectOptions = appDiceNames.map(x =>\r\n        <MenuItem value={x}>{x}</MenuItem>\r\n    );\r\n    \r\n    // slider update\r\n    const [value, setValue] = useState(10);\r\n  \r\n    const handleSliderChange = (e, newValue) => {\r\n        setValue(newValue);\r\n        updateData(\"roll\", newValue);\r\n    };\r\n    \r\n    // die select update\r\n    const [name, setName] = useState('');\r\n  \r\n    const handleSelectChange = (e) => {\r\n        setName(e.target.value);\r\n        updateData(\"die\", e.target.value);\r\n    };\r\n\r\n    //new roll update\r\n    const initialState = {\r\n        roll: value\r\n        , die: name\r\n      };\r\n\r\n    const [newRoll, setNewRoll] = useState(initialState);\r\n\r\n    const updateData = (type, data) => {\r\n        const formData = {\r\n            ...newRoll\r\n            , [type]: data\r\n        };\r\n        //console.log(formData);\r\n        setNewRoll(formData);\r\n    };\r\n    \r\n    // add the roll\r\n    const addRoll = () => {\r\n        if (newRoll.die) {\r\n            console.log(newRoll.die);\r\n            console.log(newRoll.roll);\r\n            appAddData(newRoll);\r\n            setOpen(true);\r\n        } else {\r\n            return alert(\"Please choose a die!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        Add Roll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container className={classes.root}>\r\n                <div className={classes.slider}>\r\n                    <Slider\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        marks={marks}\r\n                        min={1}\r\n                        max={20}\r\n                        orientation=\"vertical\"\r\n                        onChange={handleSliderChange}\r\n                        defaultValue={10}\r\n                        value={value}\r\n                    />\r\n                </div>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"die-select-label\">Die</InputLabel>\r\n                    <Select\r\n                        labelId=\"die-select-label\"\r\n                        id=\"die-select\"\r\n                        value={name}\r\n                        onChange={handleSelectChange}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        {selectOptions}\r\n                    </Select>\r\n                </FormControl>\r\n                \r\n\r\n                <Button\r\n                     className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={addRoll}\r\n                >\r\n                    Add Roll\r\n                </Button>\r\n                <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        Roll added!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddRoll;","import { React, useState } from 'react';\r\nimport DiceList from './DiceList';\r\nimport AddDie from './AddDie';\r\nimport AddRoll from './AddRoll';\r\nimport { \r\n    Route\r\n    , Switch\r\n    , HashRouter as Router\r\n  } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n\r\n    const initialAppData = {\r\n        allRolls: [\r\n            {\r\n                dieName: \"Blue Speckled\"\r\n                , roll: 5\r\n                , time: \"9pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 13\r\n                , time: \"9:30pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 19\r\n                , time: \"10:30pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 8\r\n                , time: \"11:30pm on saturday\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [appData, updateAppData] = useState(initialAppData);\r\n\r\n    console.log(appData);\r\n\r\n    const addData = (rollData) => {\r\n        updateAppData({\r\n            ...appData\r\n            , allRolls: [\r\n                ...appData.allRolls\r\n                , {\r\n                    dieName: rollData.die\r\n                    , roll: rollData.roll\r\n                    , time: Date.now()\r\n                }\r\n            ]\r\n        });\r\n        console.log(appData);\r\n    }\r\n\r\n    // get dice names and filter out duplicates\r\n    let diceNames = appData.allRolls.map(x => x.dieName);\r\n    diceNames = [...new Set(diceNames)];\r\n    console.log(\"dice names: \" + diceNames);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/addRoll\">\r\n                    <AddRoll\r\n                        appAddData={addData}\r\n                        appDiceNames={diceNames}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/addDie\">\r\n                    <AddDie\r\n                        appAddData={addData}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <DiceList\r\n                        appDiceNames={diceNames}\r\n                        appData={appData}\r\n                    />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}