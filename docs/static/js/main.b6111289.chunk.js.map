{"version":3,"sources":["Nav.js","DiceList.js","AddDie.js","AddRoll.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","position","bottom","width","Nav","classes","history","useHistory","useState","value","setValue","onLink","href","push","BottomNavigation","showLabels","onChange","event","newValue","className","BottomNavigationAction","label","onClick","icon","list","margin","statLabel","paddingBottom","stat","paddingTop","DiceList","rollData","appDiceNames","appData","open","setOpen","handleClick","getRollData","dieName","allRolls","filter","x","map","roll","console","log","getTwenties","length","getOnes","diceButtons","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Collapse","in","List","component","disablePadding","reduce","a","AppBar","Toolbar","Typography","variant","Container","height","textAlign","AddDice","appAddData","newDie","updateNewDie","IconButton","goBack","TextField","required","id","placeholder","e","formData","name","target","Button","color","alert","die","slider","formControl","minWidth","display","marks","AddRoll","selectOptions","MenuItem","setName","initialState","newRoll","setNewRoll","updateData","type","data","Slider","valueLabelDisplay","step","min","max","orientation","defaultValue","FormControl","InputLabel","Select","labelId","App","time","updateAppData","addData","Date","now","diceNames","Set","path","AddDie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6111289.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\nimport CasinoOutlined from '@material-ui/icons/CasinoOutlined';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: \"fixed\",\r\n        bottom: \"0\",\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\nfunction Nav() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const onLink = (href) => {\r\n      history.push(href);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            showLabels\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n            }}\r\n            className={classes.root}\r\n        >\r\n            <BottomNavigationAction\r\n                label=\"Add Dice\"\r\n                value=\"/addDie\"\r\n                onClick={() => onLink(\"/addDie\")} \r\n                icon={<FormatListNumberedIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                label=\"Add Roll\"\r\n                value=\"/addRoll\"\r\n                onClick={() => onLink(\"/addRoll\")}\r\n                icon={<CasinoOutlined />}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n  }\r\n\r\nexport default Nav;","import { React, useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , List\r\n    , ListItem\r\n    , ListItemIcon\r\n    , ListItemText\r\n    , Collapse\r\n    , Divider\r\n    , makeStyles\r\n} from '@material-ui/core';\r\nimport Casino from '@material-ui/icons/Casino';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Nav from './Nav';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        margin: \"0 0 2em 0\"\r\n    }\r\n    , statLabel: {\r\n        paddingBottom: \"0\"\r\n    }\r\n    , stat: {\r\n        paddingTop: \"0\",\r\n        margin: \"0 0 0 2em\"\r\n    }\r\n});\r\n\r\nexport const DiceList = ({ appDiceNames, appData }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // collapse stuff\r\n    const [open, setOpen] = useState(true);\r\n  \r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n\r\n    let rollData;\r\n\r\n    //get roll data\r\n    const getRollData = ( dieName ) => {\r\n        rollData = appData.allRolls.filter(x => x.dieName == dieName);\r\n        rollData = rollData.map(x => x.roll);\r\n        console.log(rollData);\r\n        return rollData;\r\n    }\r\n\r\n    //get average\r\n    const getAverage = ( dieName ) => {\r\n        let average = getRollData(dieName).reduce((a, value) => a + value, 0) / getRollData(dieName).length;\r\n        return average;\r\n    }\r\n\r\n    // get 20s\r\n    const getTwenties = ( dieName ) => {\r\n        return getRollData(dieName).filter(x => x == 20).length\r\n    }\r\n\r\n    // get 20s\r\n    const getOnes = ( dieName ) => {\r\n        return getRollData(dieName).filter(x => x == 1).length\r\n    }\r\n\r\n    // generate dice buttons\r\n    const diceButtons = appDiceNames.map(x =>\r\n        <>\r\n        <ListItem button\r\n            onClick={handleClick}\r\n        >\r\n            <ListItemIcon>\r\n                <Casino />\r\n            </ListItemIcon>\r\n            <ListItemText primary={x} />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Divider />\r\n        <Collapse in={open}>\r\n            <List component=\"div\" disablePadding>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"Average Roll:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getAverage(x)} />\r\n                </ListItem>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"20's Rolled:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getTwenties(x)} />\r\n                </ListItem>\r\n                <ListItem className={classes.statLabel}>\r\n                    <ListItemText primary=\"1's Rolled:\" />\r\n                </ListItem>\r\n                <ListItem className={classes.stat}>\r\n                    <ListItemText primary={getOnes(x)} />\r\n                </ListItem>\r\n            </List>\r\n        </Collapse>\r\n        <Divider />\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        Dice\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container>\r\n                <List className={classes.list}>\r\n                    {diceButtons}\r\n                </List>\r\n            </Container>\r\n\r\n            <Nav />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DiceList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , TextField\r\n    , Button\r\n    , IconButton\r\n} from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        margin: 16,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nconst initialState = '';\r\n\r\nconst AddDice = ({ appAddData }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // add die with blank roll so it shows up in the lists\r\n    const [newDie, updateNewDie] = useState(initialState);\r\n\r\n    // update form\r\n    const updateData = (e) => {\r\n        const formData = {\r\n            name: e.target.value\r\n        };\r\n        updateNewDie(formData);\r\n    };\r\n    \r\n    // add the die\r\n    const addDie = () => {\r\n        if (newDie.name) {\r\n            console.log(newDie.name);\r\n            appAddData({\r\n                roll: \"\"\r\n                , die: newDie.name\r\n            });\r\n\r\n        } else {\r\n            return alert(\"Please enter a name!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        Add Die\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container>\r\n                <div className={classes.root}>\r\n                    <TextField\r\n                        required\r\n                        id=\"new-die-name\"\r\n                        label=\"Die Name - Required\"\r\n                        placeholder=\"Enter die name\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        position=\"center\"\r\n                        value={newDie.dieName}\r\n                        onChange={updateData}\r\n                    />\r\n\r\n                    <br />\r\n                    <br />\r\n                    \r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={addDie}\r\n                    >\r\n                        Add Die\r\n                    </Button>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n  }\r\n\r\nexport default AddDice;","import React, { useState } from 'react';\r\nimport {\r\n    AppBar\r\n    , Toolbar\r\n    , Typography\r\n    , Container\r\n    , Button\r\n    , IconButton\r\n    , Slider\r\n    , Select\r\n    , InputLabel\r\n    , MenuItem\r\n    , makeStyles\r\n    , FormControl\r\n} from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { useHistory } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\",\r\n    }\r\n    , slider: {\r\n        height: 500,\r\n        margin: \"1em\"\r\n    }\r\n    , formControl: {\r\n        minWidth: 120\r\n    }\r\n    , button: {\r\n        display: \"Block\",\r\n        margin: \"1em auto\"\r\n    }\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: 1,\r\n        label: '1',\r\n    }\r\n    ,{\r\n        value: 2,\r\n        label: '2',\r\n    }\r\n    , {\r\n        value: 3,\r\n        label: '3',\r\n    }\r\n    , {\r\n        value: 4,\r\n        label: '4',\r\n    }\r\n    ,{\r\n        value: 5,\r\n        label: '5',\r\n    }\r\n    , {\r\n        value: 6,\r\n        label: '6',\r\n    }\r\n    , {\r\n        value: 7,\r\n        label: '7',\r\n    }\r\n    ,{\r\n        value: 8,\r\n        label: '8',\r\n    }\r\n    , {\r\n        value: 9,\r\n        label: '9',\r\n    }\r\n    , {\r\n        value: 10,\r\n        label: '10',\r\n    }\r\n    ,{\r\n        value: 11,\r\n        label: '11',\r\n    }\r\n    , {\r\n        value: 12,\r\n        label: '12',\r\n    }\r\n    , {\r\n        value: 13,\r\n        label: '13',\r\n    }\r\n    ,{\r\n        value: 14,\r\n        label: '14',\r\n    }\r\n    , {\r\n        value: 15,\r\n        label: '15',\r\n    }\r\n    , {\r\n        value: 16,\r\n        label: '16',\r\n    }\r\n    ,{\r\n        value: 17,\r\n        label: '17',\r\n    }\r\n    , {\r\n        value: 18,\r\n        label: '18',\r\n    }\r\n    , {\r\n        value: 19,\r\n        label: '19',\r\n    }\r\n    ,{\r\n        value: 20,\r\n        label: '20',\r\n    }\r\n];\r\n\r\nconst AddRoll = ({ appAddData, appDiceNames }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    // generate select die options\r\n    const selectOptions = appDiceNames.map(x =>\r\n        <MenuItem value={x}>{x}</MenuItem>\r\n    );\r\n    \r\n    // slider update\r\n    const [value, setValue] = useState(10);\r\n  \r\n    const handleSliderChange = (e, newValue) => {\r\n        setValue(newValue);\r\n        updateData(\"roll\", newValue);\r\n    };\r\n    \r\n    // die select update\r\n    const [name, setName] = useState('');\r\n  \r\n    const handleSelectChange = (e) => {\r\n        setName(e.target.value);\r\n        updateData(\"die\", e.target.value);\r\n    };\r\n\r\n    //new roll update\r\n    const initialState = {\r\n        roll: value\r\n        , die: name\r\n      };\r\n\r\n    const [newRoll, setNewRoll] = useState(initialState);\r\n\r\n    const updateData = (type, data) => {\r\n        const formData = {\r\n            ...newRoll\r\n            , [type]: data\r\n        };\r\n        //console.log(formData);\r\n        setNewRoll(formData);\r\n    };\r\n    \r\n    // add the roll\r\n    const addRoll = () => {\r\n        if (newRoll.die) {\r\n            console.log(newRoll.die);\r\n            console.log(newRoll.roll);\r\n            appAddData(newRoll);\r\n        } else {\r\n            return alert(\"Please choose a die!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        Add Roll\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Container className={classes.root}>\r\n                <div className={classes.slider}>\r\n                    <Slider\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        marks={marks}\r\n                        min={1}\r\n                        max={20}\r\n                        orientation=\"vertical\"\r\n                        onChange={handleSliderChange}\r\n                        defaultValue={10}\r\n                        value={value}\r\n                    />\r\n                </div>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"die-select-label\">Die</InputLabel>\r\n                    <Select\r\n                        labelId=\"die-select-label\"\r\n                        id=\"die-select\"\r\n                        value={name}\r\n                        onChange={handleSelectChange}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        {selectOptions}\r\n                    </Select>\r\n                </FormControl>\r\n                \r\n\r\n                <Button\r\n                     className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={addRoll}\r\n                >\r\n                    Add Roll\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddRoll;","import { React, useState } from 'react';\r\nimport DiceList from './DiceList';\r\nimport AddDie from './AddDie';\r\nimport AddRoll from './AddRoll';\r\nimport { \r\n    Route\r\n    , Switch\r\n    , HashRouter as Router\r\n  } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n\r\n    const initialAppData = {\r\n        allRolls: [\r\n            {\r\n                dieName: \"Blue Speckled\"\r\n                , roll: 5\r\n                , time: \"9pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 13\r\n                , time: \"9:30pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 19\r\n                , time: \"10:30pm on saturday\"\r\n            }\r\n            , {\r\n                dieName: \"Green and Gold\"\r\n                , roll: 8\r\n                , time: \"11:30pm on saturday\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [appData, updateAppData] = useState(initialAppData);\r\n\r\n    console.log(appData);\r\n\r\n    const addData = (rollData) => {\r\n        updateAppData({\r\n            ...appData\r\n            , allRolls: [\r\n                ...appData.allRolls\r\n                , {\r\n                    dieName: rollData.die\r\n                    , roll: rollData.roll\r\n                    , time: Date.now()\r\n                }\r\n            ]\r\n        });\r\n        console.log(appData);\r\n    }\r\n\r\n    // get dice names and filter out duplicates\r\n    let diceNames = appData.allRolls.map(x => x.dieName);\r\n    diceNames = [...new Set(diceNames)];\r\n    console.log(\"dice names: \" + diceNames);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/addRoll\">\r\n                    <AddRoll\r\n                        appAddData={addData}\r\n                        appDiceNames={diceNames}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/addDie\">\r\n                    <AddDie\r\n                        appAddData={addData}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <DiceList\r\n                        appDiceNames={diceNames}\r\n                        appData={appData}\r\n                    />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}